import{_ as t,B as a,c as r,o as d,ai as n,G as c}from"./chunks/framework.jrH_H5Hh.js";const b=JSON.parse('{"title":"Vue 中父子组件的渲染、更新与卸载流程","description":"","frontmatter":{},"headers":[],"relativePath":"my-blog/Vue/f-s-com.md","filePath":"my-blog/Vue/f-s-com.md"}'),s={name:"my-blog/Vue/f-s-com.md"};function l(i,e,u,h,g,m){const o=a("GiscusComment");return d(),r("div",null,[e[0]||(e[0]=n('<h1 id="vue-中父子组件的渲染、更新与卸载流程" tabindex="-1">Vue 中父子组件的渲染、更新与卸载流程 <a class="header-anchor" href="#vue-中父子组件的渲染、更新与卸载流程" aria-label="Permalink to &quot;Vue 中父子组件的渲染、更新与卸载流程&quot;">​</a></h1><h2 id="_1-vue-2-父子组件生命周期流程" tabindex="-1">1. Vue 2 父子组件生命周期流程 <a class="header-anchor" href="#_1-vue-2-父子组件生命周期流程" aria-label="Permalink to &quot;1. Vue 2 父子组件生命周期流程&quot;">​</a></h2><h3 id="渲染流程" tabindex="-1">渲染流程 <a class="header-anchor" href="#渲染流程" aria-label="Permalink to &quot;渲染流程&quot;">​</a></h3><ul><li><strong>父组件</strong>: <code>beforeCreate()</code> → <code>created()</code> → <code>beforeMount()</code></li><li><strong>子组件</strong>: <code>beforeCreate()</code> → <code>created()</code> → <code>beforeMount()</code> → <code>mounted()</code></li><li><strong>父组件</strong>: <code>mounted()</code></li></ul><h3 id="更新流程" tabindex="-1">更新流程 <a class="header-anchor" href="#更新流程" aria-label="Permalink to &quot;更新流程&quot;">​</a></h3><ul><li><strong>父组件</strong>: <code>beforeUpdate()</code> → <strong>子组件</strong>: <code>beforeUpdate()</code> → <code>updated()</code> → <strong>父组件</strong>: <code>updated()</code></li></ul><h3 id="卸载流程" tabindex="-1">卸载流程 <a class="header-anchor" href="#卸载流程" aria-label="Permalink to &quot;卸载流程&quot;">​</a></h3><ul><li><strong>父组件</strong>: <code>beforeDestroy()</code> → <strong>子组件</strong>: <code>beforeDestroy()</code> → <code>destroyed()</code> → <strong>父组件</strong>: <code>destroyed()</code></li></ul><h2 id="_2-vue-3-父子组件生命周期流程" tabindex="-1">2. Vue 3 父子组件生命周期流程 <a class="header-anchor" href="#_2-vue-3-父子组件生命周期流程" aria-label="Permalink to &quot;2. Vue 3 父子组件生命周期流程&quot;">​</a></h2><h3 id="渲染流程-1" tabindex="-1">渲染流程 <a class="header-anchor" href="#渲染流程-1" aria-label="Permalink to &quot;渲染流程&quot;">​</a></h3><ul><li><strong>父组件</strong>: <code>setup()</code> → <code>onBeforeMount()</code></li><li><strong>子组件</strong>: <code>setup()</code> → <code>onBeforeMount()</code> → <code>onMounted()</code></li><li><strong>父组件</strong>: <code>onMounted()</code></li></ul><h3 id="更新流程-1" tabindex="-1">更新流程 <a class="header-anchor" href="#更新流程-1" aria-label="Permalink to &quot;更新流程&quot;">​</a></h3><ul><li><strong>父组件</strong>: <code>onBeforeUpdate()</code> → <strong>子组件</strong>: <code>onBeforeUpdate()</code> → <code>onUpdated()</code> → <strong>父组件</strong>: <code>onUpdated()</code></li></ul><h3 id="卸载流程-1" tabindex="-1">卸载流程 <a class="header-anchor" href="#卸载流程-1" aria-label="Permalink to &quot;卸载流程&quot;">​</a></h3><ul><li><strong>父组件</strong>: <code>onBeforeUnmount()</code> → <strong>子组件</strong>: <code>onBeforeUnmount()</code> → <code>onUnmounted()</code> → <strong>父组件</strong>: <code>onUnmounted()</code></li></ul><hr><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><ul><li><strong>顺序一致</strong>: Vue 2 和 Vue 3 的父子组件生命周期执行顺序逻辑相同。</li><li><strong>差异在细节</strong>: Vue 3 通过组合式 API 提供更灵活的钩子注册方式，并调整了卸载阶段的钩子名称。</li><li><strong>组合式 API</strong>: 在 Vue 3 中，<code>setup()</code> 替代了 <code>beforeCreate</code> 和 <code>created</code>，且组合式钩子优先于选项式钩子执行。</li></ul>',18)),c(o)])}const _=t(s,[["render",l]]);export{b as __pageData,_ as default};
